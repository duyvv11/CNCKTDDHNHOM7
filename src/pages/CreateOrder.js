import { useState } from "react";
import axios from "axios";

const CreateOrder = () => {
  const [items, setItems] = useState([{ name: "", quantity: 1 }]);

  const handleAddItem = () => {
    setItems([...items, { name: "", quantity: 1 }]);
  };

  const handleChange = (index, field, value) => {
    const newItems = [...items];
    newItems[index][field] = value;
    setItems(newItems);
  };

  // ‚úÖ H√†m g·ªçi API t·∫°o ƒë∆°n h√†ng (t√≠ch h·ª£p refresh token)
  const handleCreateOrder = async () => {
    try {
      let token = localStorage.getItem("accessToken"); // üîπ L·∫•y token t·ª´ localStorage

      const requestData = {
        itemNames: items.map((item) => item.name),
        itemQuantities: items.map((item) => Number(item.quantity)),
      };

      console.log("üîπ Sending request:", requestData);

      const response = await axios.post("http://localhost:5000/api/orders/create", requestData, {
        headers: { Authorization: `Bearer ${token}` }, // üî• Th√™m token v√†o header
      });

      console.log("‚úÖ Response:", response.data);
      alert("T·∫°o ƒë∆°n h√†ng th√†nh c√¥ng!");
    } catch (err) {
      console.error("‚ùå L·ªói t·∫°o ƒë∆°n h√†ng:", err.response?.data || err);

      if (err.response?.status === 401) {
        // N·∫øu token h·∫øt h·∫°n, g·ªçi refresh token
        console.log("üîÑ Token h·∫øt h·∫°n, ƒëang l√†m m·ªõi...");
        const newToken = await refreshAccessToken();

        if (newToken) {
          console.log("‚úÖ Token m·ªõi ƒë√£ c·∫≠p nh·∫≠t, g·ª≠i l·∫°i request...");
          return handleCreateOrder(); // G·ª≠i l·∫°i request
        } else {
          alert("Phi√™n ƒëƒÉng nh·∫≠p ƒë√£ h·∫øt h·∫°n, vui l√≤ng ƒëƒÉng nh·∫≠p l·∫°i!");
        }
      } else {
        alert("L·ªói t·∫°o ƒë∆°n h√†ng!");
      }
    }
  };

  // ‚úÖ H√†m g·ªçi API ƒë·ªÉ l·∫•y Access Token m·ªõi t·ª´ Refresh Token
  const refreshAccessToken = async () => {
    try {
      const refreshToken = localStorage.getItem("refreshToken");
      if (!refreshToken) return null;

      const response = await axios.post("http://localhost:5000/api/auth/refresh-token", { refreshToken });

      const newAccessToken = response.data.accessToken;
      localStorage.setItem("accessToken", newAccessToken); // C·∫≠p nh·∫≠t token m·ªõi

      return newAccessToken;
    } catch (err) {
      console.error("‚ùå L·ªói refresh token:", err.response?.data || err);
      localStorage.removeItem("accessToken");
      localStorage.removeItem("refreshToken");
      return null;
    }
  };

  return (
    <div>
      <h2>T·∫°o ƒê∆°n H√†ng</h2>
      {items.map((item, index) => (
        <div key={index}>
          <input
            type="text"
            placeholder="T√™n s·∫£n ph·∫©m"
            value={item.name}
            onChange={(e) => handleChange(index, "name", e.target.value)}
          />
          <input
            type="number"
            placeholder="S·ªë l∆∞·ª£ng"
            value={item.quantity}
            onChange={(e) => handleChange(index, "quantity", e.target.value)}
          />
        </div>
      ))}
      <button onClick={handleAddItem}>Th√™m s·∫£n ph·∫©m</button>
      <button onClick={handleCreateOrder}>T·∫°o ƒë∆°n</button>
    </div>
  );
};

export default CreateOrder;
